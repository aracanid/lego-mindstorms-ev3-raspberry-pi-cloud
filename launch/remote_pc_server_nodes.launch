  <node pkg="offloadable_face_recognition" name="image_pre_processing_pc" type="image_pre_processing.py" output="screen">
    <remap from="input_rgb_image" to="/usb_cam_node/image_raw" />
    <remap from="pre_processed_image" to="/image_pre_processing/pre_processed_image_pc" />
    <remap from="face_detect_output_image" to="/face_detect_output_image/face_detect_output_image_pc" />
    <remap from="output_image" to="/lk_tracker/output_image_pc" />

  </node>

  <node pkg="offloadable_face_recognition" name="lk_tracker_pc" type="lk_tracker.py" output="screen">
    <remap from="input_rgb_image" to="/usb_cam_node/image_raw" />
    <remap from="pre_processed_image" to="/image_pre_processing/pre_processed_image_pc" />
    <remap from="face_detect_output_image" to="/face_detect_output_image/face_detect_output_image_pc" />
    <remap from="output_image" to="/lk_tracker/output_image_pc" />

  </node>

  <node pkg="offloadable_face_recognition" name="face_detector_pc" type="face_detector.py" output="screen">
    <remap from="input_rgb_image" to="/usb_cam_node/image_raw" />
    <remap from="pre_processed_image" to="/image_pre_processing/pre_processed_image_pc" />
    <remap from="face_detect_output_image" to="/face_detect_output_image/face_detect_output_image_pc" />
    <remap from="output_image" to="/lk_tracker/output_image_pc" />
    
  	<param name="cascade_frontal_alt" value="$(find offloadable_face_recognition)/params/haarcascade_frontalface_alt.xml" />
   	<param name="cascade_frontal_alt2" value="$(find offloadable_face_recognition)/params/haarcascade_frontalface_alt2.xml" />
  	<param name="cascade_profile" value="$(find offloadable_face_recognition)/params/haarcascade_profileface.xml" />

  </node>