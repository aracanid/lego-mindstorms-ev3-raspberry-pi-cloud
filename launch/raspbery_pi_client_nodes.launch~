<launch>

    <arg name="device" default="/dev/video0" />

    <node name="usb_cam_node" pkg="usb_cam" type="usb_cam_node" output="screen">
        <param name="device" value="$(arg device)" />
        <param name="width" value="640" />
        <param name="height" value="480" />
        <param name="frame_rate" value="30" />
        <param name="exposure" value="0" />
    </node>

  <node pkg="offloadable_face_recognition" name="image_pre_processing_pi" type="image_pre_processing.py" output="screen">
    <remap from="input_rgb_image" to="/usb_cam_node/image_raw" />
    <remap from="pre_processed_image" to="/image_pre_processing/pre_processed_image_pi" />
    <remap from="face_detect_output_image" to="/face_detect_output_image/face_detect_output_image_pi" />
    <remap from="face_box_coordinates" to="/face_box_coordinates/face_box_coordinates_pi" />
    <remap from="output_image" to="/lk_tracker/output_image_pi" />

  </node>

  <node pkg="offloadable_face_recognition" name="lk_tracker_pi" type="lk_tracker.py" output="screen">
    <remap from="input_rgb_image" to="/usb_cam_node/image_raw" />
    <remap from="pre_processed_image" to="/image_pre_processing/mul_pp" />
    <remap from="face_detect_output_image" to="/face_detect_output_image/mul_fd" />
    <remap from="face_box_coordinates" to="/face_box_coordinates/mul_fbc" />
    <remap from="output_image" to="/lk_tracker/output_image_pi" />

  </node>

  <node pkg="offloadable_face_recognition" name="face_detector_pi" type="face_detector.py" output="screen">
    <remap from="input_rgb_image" to="/usb_cam_node/image_raw" />
    <remap from="pre_processed_image" to="/image_pre_processing/mul_pp" />
    <remap from="face_detect_output_image" to="/face_detect_output_image/face_detect_output_image_pi" />
    
  	<param name="cascade_frontal_alt" value="$(find offloadable_face_recognition)/params/haarcascade_frontalface_alt.xml" />
   	<param name="cascade_frontal_alt2" value="$(find offloadable_face_recognition)/params/haarcascade_frontalface_alt2.xml" />
  	<param name="cascade_profile" value="$(find offloadable_face_recognition)/params/haarcascade_profileface.xml" />

  </node>

  <node pkg="offloadable_face_recognition" name="scheduler" type="scheduler.py" output="screen">
    <remap from="pp_topic_one" to="/image_pre_processing/pre_processed_image_pi"/>
    <remap from="pp_topic_two" to="/image_pre_processing/pre_processed_image_pc"/>

    <remap from="fd_topic_one" to="/face_detect_output_image/face_detect_output_image_pi" />
    <remap from="fd_topic_two" to="/face_detect_output_image/face_detect_output_image_pc" />

    <remap from="lk_topic_one" to="/lk_tracker/output_image_pi" />
    <remap from="lk_topic_two" to="/lk_tracker/output_image_pc" />

    <remap from="fbc_topic_one" to="/face_box_coordinates/face_box_coordinates_pi" />
    <remap from="fbc_topic_two" to="/face_box_coordinates/face_box_coordinates_pc" />

    <remap from="mux_pp" to="/multiplexers/mux_pp" />
    <remap from="mux_fd" to="/multiplexers/mux_fd" />
    <remap from="mux_lk" to="/multiplexers/mux_lk" />
    <remap from="mux_fbc" to="/multiplexers/mux_fbc" />
  </node>

  <node pkg="offloadable_face_recognition" name="prune_features_server" type="prune_features_server.py" output="screen"/>

  <node pkg="offloadable_face_recognition" name="add_features_server" type="add_features_server.py" output="screen"/>

</launch>
